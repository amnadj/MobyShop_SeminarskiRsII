// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobyShop.Model;

namespace MobyShop.WebAPI.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210628144707_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MobyShop.Model.Database.Artikli", b =>
                {
                    b.Property<int>("ArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena");

                    b.Property<int>("KarakteristikeId");

                    b.Property<int>("ModelId");

                    b.Property<string>("Naziv");

                    b.Property<int>("ProizvodjacId");

                    b.Property<string>("Sifra");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool?>("Status");

                    b.HasKey("ArtikalId");

                    b.HasIndex("KarakteristikeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Artikli");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Dobavljaci", b =>
                {
                    b.Property<int>("DobavljacId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("KontaktOsoba");

                    b.Property<string>("Napomena");

                    b.Property<string>("Naziv");

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon");

                    b.Property<string>("Web");

                    b.Property<string>("ZiroRacuni");

                    b.HasKey("DobavljacId");

                    b.ToTable("Dobavljaci");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Karakteristike", b =>
                {
                    b.Property<int>("KarakteristikeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Kamera");

                    b.Property<decimal>("Memorija");

                    b.Property<bool>("Novo");

                    b.Property<string>("OperativniSistem");

                    b.Property<decimal>("Procesor");

                    b.Property<decimal>("Ram");

                    b.HasKey("KarakteristikeId");

                    b.ToTable("Karakteristike");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Klijenti", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije");

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("Prezime");

                    b.Property<string>("Telefon");

                    b.HasKey("KlijentId");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("Prezime");

                    b.Property<string>("Telefon");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("MobyShop.Model.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene");

                    b.Property<int>("KorisnikId");

                    b.Property<int>("UlogaId");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Modeli", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("ModelId");

                    b.ToTable("Modeli");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Nabavka", b =>
                {
                    b.Property<int>("NabavkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNabavke");

                    b.Property<DateTime>("Datum");

                    b.Property<int>("DobavljacId");

                    b.Property<decimal>("IznosRacuna");

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Napomena");

                    b.Property<decimal>("Pdv");

                    b.Property<int>("SkladisteId");

                    b.HasKey("NabavkaId");

                    b.HasIndex("DobavljacId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Nabavka");
                });

            modelBuilder.Entity("MobyShop.Model.Database.NabavkaStavke", b =>
                {
                    b.Property<int>("NabavkaStavkeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId");

                    b.Property<decimal>("Cijena");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NabavkaId");

                    b.HasKey("NabavkaStavkeId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("NabavkaId");

                    b.ToTable("NabavkaStavke");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNarudzbe");

                    b.Property<DateTime>("Datum");

                    b.Property<decimal>("IznosBezPdv");

                    b.Property<decimal>("IznosSaPdv");

                    b.Property<int>("KlijentId");

                    b.Property<int>("KorisnikId");

                    b.Property<bool?>("Otkazano");

                    b.Property<int>("SkladisteId");

                    b.Property<bool>("Status");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("MobyShop.Model.Database.NarudzbaStavke", b =>
                {
                    b.Property<int>("NarudzbaStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId");

                    b.Property<decimal>("Cijena");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbaId");

                    b.Property<decimal?>("Popust");

                    b.HasKey("NarudzbaStavkaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Obavijesti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Naslov");

                    b.Property<byte[]>("Slika");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijesti");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId");

                    b.Property<DateTime>("Datum");

                    b.Property<int>("KlijentId");

                    b.Property<int>("Ocjena");

                    b.HasKey("OcjenaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("MobyShop.Model.Database.PoslanaNarudzba", b =>
                {
                    b.Property<int>("PoslanaNarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum");

                    b.Property<int>("KlijentId");

                    b.Property<int>("KorisnikId");

                    b.Property<int>("NarudzbaId");

                    b.Property<bool>("Poslano");

                    b.HasKey("PoslanaNarudzbaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("PoslanaNarudzba");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Proizvodjaci", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjaci");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Skladista", b =>
                {
                    b.Property<int>("SkladisteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.HasKey("SkladisteId");

                    b.ToTable("Skladista");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Zahtjevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumZahtjeva");

                    b.Property<int>("KlijentId");

                    b.Property<string>("Naslov");

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.ToTable("Zahtjevi");
                });

            modelBuilder.Entity("MobyShop.Model.Database.ZahtjeviStavke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Odgovor");

                    b.Property<int>("ZahtjevId");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ZahtjevId");

                    b.ToTable("ZahtjeviStavke");
                });

            modelBuilder.Entity("MobyShop.Model.Database.Artikli", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Karakteristike", "Karakteristike")
                        .WithMany("Artikli")
                        .HasForeignKey("KarakteristikeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Modeli", "Modeli")
                        .WithMany("Artikli")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Proizvodjaci", "Proizvodjaci")
                        .WithMany("Artikli")
                        .HasForeignKey("ProizvodjacId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.KorisniciUloge", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.Nabavka", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Dobavljaci", "Dobavljac")
                        .WithMany("Nabavka")
                        .HasForeignKey("DobavljacId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Korisnici", "Korisnik")
                        .WithMany("Nabavka")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Skladista", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.NabavkaStavke", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Artikli", "Artikal")
                        .WithMany("NabavkaStavke")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Nabavka", "Nabavka")
                        .WithMany("NabavkaStavke")
                        .HasForeignKey("NabavkaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.Narudzba", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Klijenti", "Klijent")
                        .WithMany("Narudzbe")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Korisnici", "Korisnik")
                        .WithMany("Narudzba")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Skladista", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.NarudzbaStavke", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Artikli", "Artikal")
                        .WithMany("NarudzbaStavke")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Narudzba", "Narudzba")
                        .WithMany("NarudzbaStavke")
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.Obavijesti", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Korisnici", "Korisnik")
                        .WithMany("Obavijesti")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.Ocjene", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Artikli", "Artikal")
                        .WithMany("Ocjene")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Klijenti", "Klijent")
                        .WithMany("Ocjene")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.PoslanaNarudzba", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Klijenti", "Klijent")
                        .WithMany("PoslanaNarudzba")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Korisnici", "Korisnik")
                        .WithMany("PoslanaNarudzba")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Narudzba", "Narudzba")
                        .WithMany("PoslanaNarudzba")
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.Zahtjevi", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Klijenti", "Klijent")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobyShop.Model.Database.ZahtjeviStavke", b =>
                {
                    b.HasOne("MobyShop.Model.Database.Korisnici", "Korisnik")
                        .WithMany("ZahtjeviStavke")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MobyShop.Model.Database.Zahtjevi", "Zahtjev")
                        .WithMany("ZahtjeviStavke")
                        .HasForeignKey("ZahtjevId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
