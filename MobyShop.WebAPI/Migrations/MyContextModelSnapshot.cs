// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobyShop.WebAPI;

namespace MobyShop.WebAPI.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MobyShop.WebAPI.Database.Artikli", b =>
                {
                    b.Property<int>("ArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena");

                    b.Property<int>("KarakteristikeId");

                    b.Property<int>("ModelId");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ProizvodjacId");

                    b.Property<string>("Sifra")
                        .IsRequired();

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<bool?>("Status")
                        .IsRequired();

                    b.HasKey("ArtikalId");

                    b.HasIndex("KarakteristikeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Artikli");

                    b.HasData(
                        new { ArtikalId = 1, Cijena = 1200m, KarakteristikeId = 1, ModelId = 1, Naziv = "Samsung Galaxy S20+", ProizvodjacId = 1, Sifra = "12345", Status = true },
                        new { ArtikalId = 2, Cijena = 1800m, KarakteristikeId = 3, ModelId = 3, Naziv = "Iphone 12", ProizvodjacId = 3, Sifra = "12346", Status = true },
                        new { ArtikalId = 3, Cijena = 900m, KarakteristikeId = 1, ModelId = 1, Naziv = "Samsung Galaxy S10+", ProizvodjacId = 1, Sifra = "2456", Status = true }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Dobavljaci", b =>
                {
                    b.Property<int>("DobavljacId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<string>("KontaktOsoba");

                    b.Property<string>("Napomena");

                    b.Property<string>("Naziv");

                    b.Property<bool>("Status");

                    b.Property<string>("Telefon");

                    b.Property<string>("Web");

                    b.Property<string>("ZiroRacuni");

                    b.HasKey("DobavljacId");

                    b.ToTable("Dobavljaci");

                    b.HasData(
                        new { DobavljacId = 1, Adresa = "Muje Pasica 7", Email = "dobavljac1@mail.com", Fax = "030234342", KontaktOsoba = "Selma", Napomena = "Napomena 1", Naziv = "DobavljacMoby d.o.o", Status = true, Telefon = "062612612", Web = "www.dobavljac1.com", ZiroRacuni = "123456789" },
                        new { DobavljacId = 2, Adresa = "Adresa Test", Email = "dobavljac2@mail.com", Fax = "030235352", KontaktOsoba = "Test", Napomena = "Napomena 2", Naziv = "Test", Status = true, Telefon = "062123123", Web = "www.dobavljac2.com", ZiroRacuni = "123456546" },
                        new { DobavljacId = 3, Adresa = "Adresa 3", Email = "dobavljac3@mail.com", Fax = "030234344", KontaktOsoba = "Elma", Napomena = "Napomena 3", Naziv = "Dobavljac 3", Status = false, Telefon = "062612632", Web = "www.dobavljac3.com", ZiroRacuni = "123456779" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Karakteristike", b =>
                {
                    b.Property<int>("KarakteristikeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Kamera");

                    b.Property<decimal>("Memorija");

                    b.Property<bool>("Novo");

                    b.Property<string>("OperativniSistem")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Procesor");

                    b.Property<decimal>("Ram");

                    b.HasKey("KarakteristikeId");

                    b.ToTable("Karakteristike");

                    b.HasData(
                        new { KarakteristikeId = 1, Kamera = 48m, Memorija = 256m, Novo = true, OperativniSistem = "Android", Procesor = 3m, Ram = 8m },
                        new { KarakteristikeId = 2, Kamera = 32m, Memorija = 128m, Novo = true, OperativniSistem = "Android", Procesor = 2m, Ram = 6m },
                        new { KarakteristikeId = 3, Kamera = 12m, Memorija = 128m, Novo = false, OperativniSistem = "IOS", Procesor = 2m, Ram = 4m },
                        new { KarakteristikeId = 4, Kamera = 20m, Memorija = 128m, Novo = true, OperativniSistem = "Android", Procesor = 2m, Ram = 4m }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Klijenti", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije");

                    b.Property<string>("Email");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired();

                    b.Property<string>("LozinkaSalt")
                        .IsRequired();

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefon");

                    b.HasKey("KlijentId");

                    b.ToTable("Klijenti");

                    b.HasData(
                        new { KlijentId = 1, DatumRegistracije = new DateTime(2021, 7, 11, 14, 35, 2, 784, DateTimeKind.Local), Email = "admin@mail.com", Ime = "Admin", KorisnickoIme = "admin", LozinkaHash = "msRqfae6n9ecynIZo++mdsRXI9A=", LozinkaSalt = "qC8CByThGQN5qApaADFb1Q==", Prezime = "Admin", Telefon = "063232213" },
                        new { KlijentId = 2, DatumRegistracije = new DateTime(2021, 7, 11, 14, 35, 2, 797, DateTimeKind.Local), Email = "user@mail.com", Ime = "User", KorisnickoIme = "user", LozinkaHash = "msRqfae6n9ecynIZo++mdsRXI9A=", LozinkaSalt = "IEn1ZDxWcQy4qoDhzxDN0A==", Prezime = "User", Telefon = "063132233" },
                        new { KlijentId = 3, DatumRegistracije = new DateTime(2021, 7, 11, 14, 35, 2, 797, DateTimeKind.Local), Email = "amna@mail.com", Ime = "Amna", KorisnickoIme = "amna123", LozinkaHash = "OZ0LPK3MjSQi6XkQy6lyH7sKeEo=", LozinkaSalt = "XqhynIqes3RnrOiVRT3iLA==", Prezime = "Dj", Telefon = "063232245" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired();

                    b.Property<string>("LozinkaSalt")
                        .IsRequired();

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefon");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new { KorisnikId = 1, Email = "admin@mail.com", Ime = "Admin", KorisnickoIme = "admin", LozinkaHash = "msRqfae6n9ecynIZo++mdsRXI9A=", LozinkaSalt = "qC8CByThGQN5qApaADFb1Q==", Prezime = "Admin", Telefon = "063232983" },
                        new { KorisnikId = 2, Email = "prodavac@mail.com", Ime = "Prodavac", KorisnickoIme = "prodavac", LozinkaHash = "poYyNLHCprwOCfDqkiH2ItkdfQQ=", LozinkaSalt = "IEn1ZDxWcQy4qoDhzxDN0A==", Prezime = "Prodavac", Telefon = "063235785" },
                        new { KorisnikId = 3, Email = "user@mail.com", Ime = "User", KorisnickoIme = "user", LozinkaHash = "8+rE1Ksrmut7v5h7jMKdOaOqp7M=", LozinkaSalt = "XqhynIqes3RnrOiVRT3iLA==", Prezime = "User", Telefon = "063132233" },
                        new { KorisnikId = 4, Email = "amna@mail.com", Ime = "Amna", KorisnickoIme = "amna136", LozinkaHash = "ltlk/W/nvtI0kYhLDJ9qq7D6vwE=", LozinkaSalt = "tW3ic7sBR8UsRlydwRCKXg==", Prezime = "Dj", Telefon = "063132233" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene");

                    b.Property<int>("KorisnikId");

                    b.Property<int>("UlogaId");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");

                    b.HasData(
                        new { KorisnikUlogaId = 1, DatumIzmjene = new DateTime(2021, 7, 11, 14, 35, 2, 799, DateTimeKind.Local), KorisnikId = 1, UlogaId = 1 },
                        new { KorisnikUlogaId = 2, DatumIzmjene = new DateTime(2021, 7, 11, 14, 35, 2, 799, DateTimeKind.Local), KorisnikId = 2, UlogaId = 2 },
                        new { KorisnikUlogaId = 3, DatumIzmjene = new DateTime(2021, 7, 11, 14, 35, 2, 799, DateTimeKind.Local), KorisnikId = 3, UlogaId = 2 }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Modeli", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ModelId");

                    b.ToTable("Modeli");

                    b.HasData(
                        new { ModelId = 1, Naziv = "Samsung" },
                        new { ModelId = 2, Naziv = "Huawei" },
                        new { ModelId = 3, Naziv = "Iphone" },
                        new { ModelId = 4, Naziv = "Alcatel" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Nabavka", b =>
                {
                    b.Property<int>("NabavkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNabavke")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Datum");

                    b.Property<int>("DobavljacId");

                    b.Property<decimal>("IznosRacuna");

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Napomena");

                    b.Property<decimal>("Pdv");

                    b.Property<int>("SkladisteId");

                    b.HasKey("NabavkaId");

                    b.HasIndex("DobavljacId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Nabavka");

                    b.HasData(
                        new { NabavkaId = 1, BrojNabavke = "1", Datum = new DateTime(2021, 7, 11, 14, 35, 2, 799, DateTimeKind.Local), DobavljacId = 1, IznosRacuna = 1500m, KorisnikId = 1, Napomena = "Prva nabavka", Pdv = 17m, SkladisteId = 1 },
                        new { NabavkaId = 2, BrojNabavke = "2", Datum = new DateTime(2021, 7, 11, 14, 35, 2, 800, DateTimeKind.Local), DobavljacId = 2, IznosRacuna = 1000m, KorisnikId = 1, Napomena = "Druga nabavka", Pdv = 17m, SkladisteId = 1 },
                        new { NabavkaId = 3, BrojNabavke = "3", Datum = new DateTime(2021, 7, 11, 14, 35, 2, 800, DateTimeKind.Local), DobavljacId = 2, IznosRacuna = 1404m, KorisnikId = 2, Napomena = "Treca nabavka", Pdv = 17m, SkladisteId = 1 }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.NabavkaStavke", b =>
                {
                    b.Property<int>("NabavkaStavkeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId");

                    b.Property<decimal>("Cijena");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NabavkaId");

                    b.HasKey("NabavkaStavkeId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("NabavkaId");

                    b.ToTable("NabavkaStavke");

                    b.HasData(
                        new { NabavkaStavkeId = 1, ArtikalId = 1, Cijena = 1200m, Kolicina = 1, NabavkaId = 1 },
                        new { NabavkaStavkeId = 2, ArtikalId = 2, Cijena = 1200m, Kolicina = 1, NabavkaId = 2 }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojNarudzbe")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Datum");

                    b.Property<decimal>("IznosBezPdv");

                    b.Property<decimal>("IznosSaPdv");

                    b.Property<int>("KlijentId");

                    b.Property<int>("KorisnikId");

                    b.Property<bool?>("Otkazano")
                        .IsRequired();

                    b.Property<int>("SkladisteId");

                    b.Property<bool>("Status");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("Narudzba");

                    b.HasData(
                        new { NarudzbaId = 1, BrojNarudzbe = "1", Datum = new DateTime(2021, 7, 11, 14, 35, 2, 800, DateTimeKind.Local), IznosBezPdv = 1000m, IznosSaPdv = 1170m, KlijentId = 1, KorisnikId = 1, Otkazano = false, SkladisteId = 1, Status = true },
                        new { NarudzbaId = 2, BrojNarudzbe = "2", Datum = new DateTime(2021, 7, 11, 14, 35, 2, 801, DateTimeKind.Local), IznosBezPdv = 900m, IznosSaPdv = 1053m, KlijentId = 1, KorisnikId = 3, Otkazano = false, SkladisteId = 2, Status = true }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.NarudzbaStavke", b =>
                {
                    b.Property<int>("NarudzbaStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId");

                    b.Property<decimal>("Cijena");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbaId");

                    b.Property<decimal?>("Popust");

                    b.HasKey("NarudzbaStavkaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("NarudzbaStavke");

                    b.HasData(
                        new { NarudzbaStavkaId = 1, ArtikalId = 2, Cijena = 1200m, Kolicina = 1, NarudzbaId = 1, Popust = 10m },
                        new { NarudzbaStavkaId = 2, ArtikalId = 1, Cijena = 900m, Kolicina = 1, NarudzbaId = 2, Popust = 0m },
                        new { NarudzbaStavkaId = 3, ArtikalId = 3, Cijena = 1800m, Kolicina = 1, NarudzbaId = 2, Popust = 0m }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Obavijesti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Naslov");

                    b.Property<byte[]>("Slika");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijesti");
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtikalId");

                    b.Property<DateTime>("Datum");

                    b.Property<int>("KlijentId");

                    b.Property<int>("Ocjena");

                    b.HasKey("OcjenaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Ocjene");

                    b.HasData(
                        new { OcjenaId = 1, ArtikalId = 2, Datum = new DateTime(2021, 7, 11, 14, 35, 2, 801, DateTimeKind.Local), KlijentId = 1, Ocjena = 5 },
                        new { OcjenaId = 2, ArtikalId = 1, Datum = new DateTime(2021, 7, 11, 14, 35, 2, 801, DateTimeKind.Local), KlijentId = 1, Ocjena = 5 }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.PoslanaNarudzba", b =>
                {
                    b.Property<int>("PoslanaNarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum");

                    b.Property<int>("KlijentId");

                    b.Property<int>("KorisnikId");

                    b.Property<int>("NarudzbaId");

                    b.Property<bool>("Poslano");

                    b.HasKey("PoslanaNarudzbaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("PoslanaNarudzba");
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Proizvodjaci", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjaci");

                    b.HasData(
                        new { ProizvodjacId = 1, Naziv = "Samsung" },
                        new { ProizvodjacId = 2, Naziv = "Huawei" },
                        new { ProizvodjacId = 3, Naziv = "Apple" },
                        new { ProizvodjacId = 4, Naziv = "Alcatel" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Skladista", b =>
                {
                    b.Property<int>("SkladisteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasMaxLength(50);

                    b.HasKey("SkladisteId");

                    b.ToTable("Skladista");

                    b.HasData(
                        new { SkladisteId = 1, Adresa = "Adresa 1", Naziv = "Skladiste 1", Opis = "Glavno skladiste" },
                        new { SkladisteId = 2, Adresa = "Adresa 2", Naziv = "Skladiste 2", Opis = "Sporedno skladiste" },
                        new { SkladisteId = 3, Adresa = "Adresa 3", Naziv = "Skladiste 3", Opis = "skladiste" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Opis")
                        .HasMaxLength(50);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");

                    b.HasData(
                        new { UlogaId = 1, Naziv = "Admin", Opis = "Upravljanje sistemom" },
                        new { UlogaId = 2, Naziv = "Prodavac", Opis = "Rad na sistemu" },
                        new { UlogaId = 3, Naziv = "Skladistar", Opis = "Upravljanje robom" }
                    );
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Zahtjevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumZahtjeva");

                    b.Property<int>("KlijentId");

                    b.Property<string>("Naslov");

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.ToTable("Zahtjevi");
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.ZahtjeviStavke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Odgovor");

                    b.Property<int>("ZahtjevId");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ZahtjevId");

                    b.ToTable("ZahtjeviStavke");
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Artikli", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Karakteristike", "Karakteristike")
                        .WithMany("Artikli")
                        .HasForeignKey("KarakteristikeId")
                        .HasConstraintName("FK__KarakteristikeArtikli__KarakteristikaId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Modeli", "Modeli")
                        .WithMany("Artikli")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK__ModeliArtikli__ModelId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Proizvodjaci", "Proizvodjaci")
                        .WithMany("Artikli")
                        .HasForeignKey("ProizvodjacId")
                        .HasConstraintName("FK__ProizvodjaciArtikli__ProizvodjacId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikUloga_KorisnikId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__KorisnikUloga_UlogaId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Nabavka", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Dobavljaci", "Dobavljac")
                        .WithMany("Nabavka")
                        .HasForeignKey("DobavljacId")
                        .HasConstraintName("FK__NabavkaDobavljaci_DobavljacId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Nabavka")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__NabavkaKorisnik_KorisnikId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Skladista", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.NabavkaStavke", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("NabavkaStavke")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK__NabavkaStavkeArtikal__ArtikalId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Nabavka", "Nabavka")
                        .WithMany("NabavkaStavke")
                        .HasForeignKey("NabavkaId")
                        .HasConstraintName("FK__NabavkaStavke__NabavkaId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Narudzba", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Narudzbe")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK__KlijentiNarudzbe_KlijentId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Narudzba")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikNarudzbe_KorisnikId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Skladista", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.NarudzbaStavke", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("NarudzbaStavke")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK__NarudzbaStavkeArtikal__ArtikaId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Narudzba", "Narudzba")
                        .WithMany("NarudzbaStavke")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK__NarudzbaStavke__NarudzbaId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Obavijesti", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Obavijesti")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Artikli", "Artikal")
                        .WithMany("Ocjene")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK__OcjeneArtikli_ArtikalId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Ocjene")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK__OcjeneKlijent_KlijentId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.PoslanaNarudzba", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("PoslanaNarudzba")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK__KlijentiPoslanaNarudzba_KlijentId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("PoslanaNarudzba")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisniciPoslanaNarudzba_KorisnikId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Narudzba", "Narudzba")
                        .WithMany("PoslanaNarudzba")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("FK__PoslanaNarudzba_NarudzbaId__267ABA7A")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.Zahtjevi", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MobyShop.WebAPI.Database.ZahtjeviStavke", b =>
                {
                    b.HasOne("MobyShop.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("ZahtjeviStavke")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MobyShop.WebAPI.Database.Zahtjevi", "Zahtjev")
                        .WithMany("ZahtjeviStavke")
                        .HasForeignKey("ZahtjevId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
